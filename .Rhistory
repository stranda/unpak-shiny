install.packages('dplyr')
library(dplyr)
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline")
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
View(phenadjust)
View(phenos)
phenos <- read.csv("phenotypes2015-07-20.csv") #expects 'wide' not long (or melted) format
View(phenos)
library(shiny)
install.packages('shiny')
library(ggplot2)
install.packages(ggplot2)
install.packages('ggplot2')
library(shint)
library(shiny)
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny")
runApp('findline.new/')
install.package('unpakR')
install.packages('unpakR')
install.packages('xtable')
library(RMySQL)
install.packages('RMySQL')
install.packages('reshape')
library(xtable)
runApp('findline.new/')
source(unpakR)
source('unpakR')
library(ggplot2)
runApp('findline.new/')
runApp('pheno2d.new/')
runApp('findline.new/')
install.packages('ggplot2')
install.packages("ggplot2")
runApp('findline.new/')
library(shiny)
runApp('findline.new/')
library(shiny)
runApp('findline.new/')
runApp("tdna")
library(shiny)
runApp('findline.new/')
version()
version
plot(c(1,2,3,4),(1,2,3,4))
plot(c(1,2,3,4),c(1,2,3,4))
qplot(c(1,2,3,4),c(1,2,3,4))
runApp('findline.new/')
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline")
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
View(phenadjust)
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
View(phenadjust)
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
View(phenos)
runApp('findline.new/')
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny")
runApp('findline.new/')
View(phenos)
library(ggplot2)
library(shiny)
runApp('findline.new/')
?textInput
?selectInput
runApp('findline.new/')
library(shiny)
runApp()
runApp('findline.new/')
con <- dbConnect(MySQL(),dbname="unpak",user="unpak-R",password="thaliana")
lines <- unique(dbGetQuery(con,"SELECT idAccession FROM Accession"))
query <- paste("SELECT O.value, Ph.name, Pl.Accession_idAccession, T.name, E.name, F.name, Pl.idIndividualPlant",
" FROM Observation O",
" JOIN IndividualPlant Pl ON O.IndividualPlant_idIndividualPlant = Pl.idIndividualPlant",
" JOIN Phenotype Ph ON O.Phenotype_idPhenotype = Ph.idPhenotype",
" JOIN Experiment E ON Pl.Experiment_idExperiment = E.idExperiment",
" JOIN Facility F ON F.idFacility = Pl.Facility_idFacility",
" JOIN Treatment T ON O.Treatment_idTreatment = T.idTreatment",
sep="")
obstbl <- dbGetQuery(con,query)
names(obstbl) <- c("value","phenotype","line","treatment","experiment","facility","individualPlant")
line = 'CS70000'
udf <- unique(obstbl[obstbl$line==line,c("experiment","phenotype","treatment")])
obstbl <- merge(obstbl,udf)
View(obstbl)
is.na(obstbl)
which(is.na(obstbl))
which(is.na(obstbl) == 'TRUE')
which(is.na(obstbl) == TRUE)
which(is.na(obstbl) == FALSE)
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
View(df)
df = df[is.na(df)] <- 0
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
df[is.na(df)] = 0
phenos = 'aborted.fruits'
?cbind
col = which(names(df) == input$phenos)
df = cbind(df[1:5],df[5])
col = which(names(df) == phenos)
df = cbind(df[1:5],df[,col])
View(df)
col
names(df)
phenos
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
names(df)
col = which(names(df) == 'aborted.fruits')
col
df = cbind(df[1:5],df[,col])
View(df)
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
df = phytcorrect(df, input$phenos, c("experiment","facility","treatment"), 'line')
df = phytcorrect(df, 'aborted.fruits', c("experiment","facility","treatment"), 'line')
View(df)
which(is.na(df))
which(!is.na(df))
9102*19
runApp('findline.new/')
View(df)
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
View(df)
df = phytcorrect(df, 'aborted.fruits', c("experiment","facility","treatment"), 'line')
View(df)
runApp('findline.new/')
View(df)
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
View(df)
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
runApp('findline.new/')
col = which(names(df) == phenos)
col
dfx = cbind(df[,1:5],df[,col])
View(dfx)
View(df)
dfx = cbind(df[,1:5],df[,7])
View(dfx)
dfx <- dfx[!is.na(dfx[,pheno]),] #don't mess with NAs
dfx <- dfx[!is.na(dfx),] #don't mess with NAs
View(dfx)
dfx <- dfx[!is.na(dfx[,6]),] #don't mess with NAs
View(dfx)
runApp('findline.new/')
View(dfx)
linedf = df[df$line%in%input$line,]
names(df)[6] = 'value'
names(linedf)[6] = 'value'
linedf = df[df$line%in%input$line,]
linedf = df[which(df$line == input$line),]
linedf = df[which(df$line == line),]
View(linedf)
View(df)
linedf = dfx[which(dfx$line == line),]
View(linedf)
linedf = df[which(df$line == line),]
View(df)
View(dfx)
names(dfx)[6] = 'value'
linedf = df[which(df$line == input$line),]
linedf = df[which(df$line == line),]
View(linedf)
linedf = dfx[which(dfx$line == line),]
View(linedf)
df <- df%>%group_by(line,experiment,treatment)%>%summarise(value=mean(value,na.rm=T))
linedf = df[which(df$line == input$line),]
linedf = df[which(df$line == line),]
View(linedf)
library(shiny)
runApp('pheno2d.new/')
install.packages("png")
install.packages('libong')
install.packages('libpng')
update.packages('libpng')
runApp('pheno2d.new/')
library(shiny)
runApp('findline/')
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny/Old-Code/test.findline")
data = read.csv("phenotypes2015-07-20.csv")
line = 'CS70000'
line2 = 'SALK_CS60000'
lines = c(line, line2)
lines
View(data)
linedf = data[which(data$Accession %in% lines),]
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny")
runApp('findline/')
View(linedf)
runApp('findline/')
SALK_CS60000
ECOTYPE-22623
runApp('findline/')
library(shiny)
runApp('findline.t/')
lineNames
runApp('findline.t/')
?unlockBinding
runApp('findline.t/')
lineNames
runApp('findline.t/')
?df
runApp('findline.t/')
'CS70000' %in% lineNames
runApp('findline.t/')
?geom_histogram
library(ggplot2)
?geom_histogram
library(shiny)
runApp('findline.t/')
?range
c = c(1,4,5,1,9,10)
range(c)
range(c)[2] - range(c)[1]
runApp('findline.t/')
install.packages('ggvis')
library(ggvis)
library(shiny)
runApp(testvis)
runApp("testvis")
library(ggplot2)
runApp("testvis")
install.packages()
install.packages('gridExtra')
runApp("testvis")
library(dplyr)
runApp("testvis")
library(dplyr)
runApp("testvis")
library(dplyr)
runApp("testvis")
?range()
runApp("testvis")
xxx = read.table('../dbInfo.txt', sep = "\t")
View(xxx)
xxx = read.table('../dbInfo.txt')
x = read.table('../dbInfo.txt')
View(x)
x[1]
x[2]
x[3]
x[[1]]
typeof(x[[1]])
toString(x[[1]])
x = read.table('../dbInfo.txt', col = "info", fill = FALSE)
x = read.table('../dbInfo.txt', col.names = "info", fill = FALSE)
View(x)
x[1]
x = read.delim('../dbInfo.txt', col.names = "info", fill = FALSE)
View(x)
x = read.delim('../dbInfo.txt')
x = read.delim('../dbInfo.txt' sep = "\t")
runApp('phenoexplore/')
View(x)
runApp('phenoexplore/')
library(shiny)
runApp('findline.ss/')
