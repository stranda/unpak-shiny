name = paste(phenoname[i], '_slims', sep='')
name
shiny::runApp('goSlim')
shiny::runApp('~/Desktop/SentimentCap/StoryData/storyApp')
install.packages(kmeanspp)
install.packages('kmeanspp')
?kmeanspp
install.packages('LICORS')
library('LICORS')
?kmeanspp
set.seed(1984)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = "random")
plot(ZZ, col = cluster_ZZ$cluster + 1, pch = 19)
set.seed(1984)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = "random")
plot(ZZ)
set.seed(1984)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = "random")
plot(ZZ, col = cluster_ZZ$cluster + 1, pch = 19)
View(cluster_ZZ)
set.seed(1984)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 2, start = "random")
plot(ZZ, col = cluster_ZZ$cluster + 1, pch = 19)
set.seed(1984)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 10, start = "random")
plot(ZZ, col = cluster_ZZ$cluster + 1, pch = 19)
set.seed(1984)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 20, start = "random")
plot(ZZ, col = cluster_ZZ$cluster + 1, pch = 19)
set.seed(1984)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = 3)
plot(ZZ, col = cluster_ZZ$cluster + 1, pch = 19)
set.seed(1984)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = 4)
plot(ZZ, col = cluster_ZZ$cluster + 1, pch = 19)
set.seed(1984)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = 5)
plot(ZZ, col = cluster_ZZ$cluster + 1, pch = 19)
kpp = function() {
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = "random")
plot(ZZ, col = cluster_ZZ$cluster + 1, pch = 19)
}
kpp()
cluster_ZZ
library(ggplot2)
lenth(cluster_ZZ$cluster)
length(cluster_ZZ$cluster)
cluster_ZZ$cluster
View(XX)
View(YY)
View(ZZ)
View(YY)
View(ZZ)
View(YY)
View(XX)
xxx = cluster_ZZ$cluster
df = cbind(ZZ,xxx)
View(df)
p = ggplot(df)
df = as.data.frame(cbind(ZZ,cluster_ZZ$cluster))
p = ggplot(df)
View(df)
p + geom_point(aes(color=factor(V3)))
p = ggplot(df, aes(x=V1,Y=V2))
p + geom_point(aes(color=factor(V3)))
p = ggplot(df, aes(V1,V2))
p + geom_point(aes(color=factor(V3)))
source('~/Desktop/School/Senior/Spring/Stats/kpp.R')
kpp()
p + geom_point()
ZZ
p + geom_point()
df2 = data.frame(Xcenter = c(-.01252332, -.42152143), Ycenter = c(0.3241, -0.419047))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter,Y=Ycenter))
df
View(df)
source('~/Desktop/School/Senior/Spring/Stats/kpp.R')
df2 = data.frame(Xcenter = c(-.01252332, -.42152143), Ycenter = c(0.3241, -0.419047))
View(df2)
source('~/Desktop/School/Senior/Spring/Stats/kpp.R')
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = "random")
df = as.data.frame(cbind(ZZ,cluster_ZZ$cluster))
df2 = data.frame(Xcenter = c(-.01252332, -.42152143), Ycenter = c(0.3241, -0.419047))
p = ggplot(df, aes(V1,V2))
p + geom_point(aes(color=factor(V3)))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, shape = Triangle))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, shape = 'Triangle'))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, shape = f))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, shape = 'f'))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, mapping=aes(x=Xcenter, y=Ycenter, shape = f))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, mapping=aes(x=Xcenter, y=Ycenter, size = 10))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, mapping=aes(x=Xcenter, y=Ycenter, size = 10, color='pink'))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, mapping=aes(x=Xcenter, y=Ycenter, size = 10, color='black'))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, mapping=aes(x=Xcenter, y=Ycenter, size = 10, color=black))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, mapping=aes(x=Xcenter, y=Ycenter, size = 10, color='black'))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, mapping=aes(x=Xcenter, y=Ycenter, size = 10, color='pink'))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, mapping=aes(x=Xcenter, y=Ycenter, size = 10, shape=p color='pink')) + le
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, mapping=aes(x=Xcenter, y=Ycenter, size = 10, shape=p, color='pink')) + le
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, mapping=aes(x=Xcenter, y=Ycenter, size = 10, shape=p, color='pink'))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=5))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=5, type='a'))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=5, type='b'))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=5, type='c'))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=5, shape=cond))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=5, shape=X))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=5, shape=Xcenter))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=5, shape=Xcenter)) + scale_shape_identity
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=5, shape=Xcenter)) + scale_shape_identity()
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=5, shape= 'a')) + scale_shape_identity()
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=5, shape= 'X')) + scale_shape_identity()
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, shape= 'X')) + scale_shape_identity()
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=10 shape= 'X')) + scale_shape_identity()
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=10, shape= 'X')) + scale_shape_identity()
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=10, shape= 'X')) + scale_shape_identity() + scale_fill_discrete(name="Experimental\nCondition", breaks=c("ctrl", "trt1", "trt2"),labels=c("Control", "Treatment 1", "Treatment 2"))
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=10, shape= 'X')) + scale_shape_identity() + theme(legend.position="none")
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=10 shape= 'X')) + scale_shape_identity()
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, size=10, shape= 'X')) + scale_shape_identity()
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, shape= 'X'), size=10) + scale_shape_identity()
p + geom_point(aes(color=factor(V3))) + geom_point(data=df2, aes(x=Xcenter, y=Ycenter, shape= 'X'), size=3) + scale_shape_identity()
source('~/Desktop/School/Senior/Spring/Stats/kpp.R')
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
install.packages('LOCUS')
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = "random")
df = as.data.frame(cbind(ZZ,cluster_ZZ$cluster))
names(df) = c('Xvals','Yvals','cluster')
View(df)
df$Xvals
data = df[which(df$cluster == 1),]
mean(data$Xvals)
data$Xcals
data$Xvals
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
getData = function() {
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = "random")
df = as.data.frame(cbind(ZZ,cluster_ZZ$cluster))
names(df) = c('Xvals','Yvals','cluster')
return(df)
}
df = getData()
head(df)
df$Xvals
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
getData = function() {
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = "random")
df = as.data.frame(cbind(ZZ,cluster_ZZ$cluster))
names(df) = c('Xvals','Yvals','cluster')
return(df)
}
getCenters = function(df){
#centers should be equal to the centers of each cluster. need to calculate for this
centers = data.frame()
for(i in 1:input$k) {
data = df[which(df$cluster == i),]
centers = as.data.frame(rbind(centers,c(mean(data$Xvals),mean(data$Yvals))))
}
return(centers)
}
df = getData()
centers = getCenters(df)
getCenters = function(df){
#centers should be equal to the centers of each cluster. need to calculate for this
centers = data.frame()
for(i in 1:input$k) {
data = df[which(df$cluster == 1),]
centers = as.data.frame(rbind(centers,c(mean(data$Xvals),mean(data$Yvals))))
}
return(centers)
}
df = getData()
centers = getCenters(df)
getCenters = function(df){
#centers should be equal to the centers of each cluster. need to calculate for this
centers = data.frame()
for(i in 1:5) {
data = df[which(df$cluster == i),]
centers = as.data.frame(rbind(centers,c(mean(data$Xvals),mean(data$Yvals))))
}
return(centers)
}
df = getData()
centers = getCenters(df)
library(LICORS)
df = getData()
centers = getCenters(df)
centers
df
View(centers)
centers = data.frame('Xvals','Yvals','cluster')
View(centers)
center = data.frame()
centers = data.frame
names(centers) = c('Xvals','Yvals','cluster')
centers = data.frame()
names(centers) = c('Xvals','Yvals','cluster')
matrix(0,3,3)
matrix(0,2,3)
centers = as.data.frame(matrix(0,5,3)
)
centers
df
getCenters = function(df){
#centers should be equal to the centers of each cluster. need to calculate for this
centers = as.data.frame(matrix(0,5,2))
names(centers) = c('Xvals','Yvals')
for(i in 1:5) {
data = df[which(df$cluster == i),]
centers[i,] = c(mean(data$Xvals),mean(data$Yvals))
}
return(centers)
}
df = getData()
centers = getCenters(df)
p = ggplot(df, aes(Xval,Yval))
library(ggplot2)
p = ggplot(df, aes(Xval,Yval))
p + geom_point(aes(color=factor(cluster))) + geom_point(data=centers, aes(x=Xval, y=Yval, shape= 'X'), size=3) + scale_shape_identity()
View(centers)
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
?rnorm
matrix(rnorm(nn), ncol = 2)
rnorm(100)
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 150
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 125
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 150
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 200
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
?numericInput
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
nn <- 250
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 10
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 250
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 300 * (1.0/3.0)
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 150 * (1.0/3.0)
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 150 * (2.0/3.0)
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 350 * (2.0/3.0)
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
350 * (2/3)
round(350 * (2.0/3.0))
nn <- round(350 * (2.0/3.0))
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- round(150 * (2.0/3.0))
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- round(200 * (2.0/3.0))
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- round(500 * (2.0/3.0))
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
View(ZZ)
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
nn <- round(input$size * (2.0/3.0))
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = input$k, start = "random")
nn <- round(input$size * (2.0/3.0))
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = "random")
cluster_ZZ
cluster_ZZ$betweenss
cluster_ZZ$size
cluster_ZZ$withinss
cluster_ZZ$iter
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
nn <- round(input$size * (2.0/3.0))
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = input$k, start = "random", iter.max = 1)
nn <- round(150 * (2.0/3.0))
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = "random", iter.max = 1)
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
?is.na()
?is.na
?is.null
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
cluster_ZZ
cluster_ZZ$withinss
cluster_ZZ$size
cluster_ZZ$ifault
cluster_ZZ$totss
dff = rbind(cluster_ZZ$size, clusterZZ$withinss)
dff = rbind(cluster_ZZ$size, cluster_ZZ$withinss)
View(dff)
dff = rbind(int(cluster_ZZ$size), cluster_ZZ$withinss)
dff = rbind(as.int(cluster_ZZ$size), cluster_ZZ$withinss)
dff = rbind(as.integer(cluster_ZZ$size), cluster_ZZ$withinss)
View(dff)
dff
dff = as.data.frame(rbind(cluster_ZZ$size, cluster_ZZ$withinss))
xxx = cbind(c('size','WithinSS'), dff)
View(xxx)
names(xxx) = c('', seq(1,5))
View(xxx)
names(xxx) = c('Cluster:', seq(1,5))
View(xxx)
cluster_ZZ$totss
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
cluster_ZZ$totss
cluster_ZZ$betweenss
cluster_ZZ$withinss
sum(cluster_ZZ$withinss)
sum(cluster_ZZ$withinss) + 136.9935
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
library(shiny)
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
nn <- round(input$size * (2.0/3.0))
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
nn <- 100
XX <- matrix(rnorm(nn), ncol = 2)
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = 'random')
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = 1)
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = 2)
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
cluster_ZZ <- kmeanspp(ZZ, k = 5, start = 2)
cluster_ZZ
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
?kmeanspp
?plot
cluster_ZZ
as.numeric('1')
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
shiny::runApp('~/Desktop/SentimentCapstoneFinal/StoryData/storyApp')
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
library(LICORS)
?kmeanspp
shiny::runApp('~/Desktop/School/Senior/Spring/SentimentCapstoneFinal/StoryData/storyApp')
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
install.packages()
install.packages('mvrnorm')
x=rexp(100,1/2500)
x
nn <- round(input$size * (2.0/3.0))
nn <- round(200 * (2.0/3.0))
XX <- matrix(rexp(nn), ncol = 2)
XX
YY <- matrix(runif(length(XX) * 2, -1, 1), ncol = ncol(XX))
ZZ <- rbind(XX, YY)
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
?
checkboxInput
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
?kmeanspp
shiny::runApp('~/Desktop/School/Senior/Spring/Stats/kppApp')
shiny::runApp('~/Desktop/Projects/Work_Unpak/database code/unpak-shiny/phenoexplore')
?paste0
url.root <- "http://arabidopsis.org/servlets/Search?type=germplasm&search_action=search&pageNum=1&search=Submit+Query&germplasm_type=individual_line&taxon=1&name_type_1=gene_name&method_1=2&name_1=&name_type_2=germplasm_phenotype&method_2=1&name_2=&name_type_3=germplasm_stock_name&method_3=4&name_3="
url.root
paste(url.root,'CS70000', sep='')
paste("<a href='",url.root,'CS70000',"</a>" sep='')
paste("<a href='",url.root,'CS70000',"</a>", sep='')
shiny::runApp('phenoexplore')
shiny::runApp('findline')
shiny::runApp('findline.update')
shiny::runApp('findline.Levitt')
shiny::runApp('findline')
?HTML
HTML(paste("<a href='",url.root,'CS70000',"</a>", sep=''))
el <- div(HTML("I like <u>turtles</u>"))
cat(as.character(el))
el
shiny::runApp('findline')
shiny::runApp('~/Downloads/findline')
msg <- "==================================================\n"
> msg2 <- paste(msg, "Var:")strsplit(msg2, "\n")[[1]]
msg <- "==================================================\n"
msg2 <- paste(msg, "Var:")
msg
msg2
strsplit(msg2, "\n")[[1]]
?cat
url.root <- "http://arabidopsis.org/servlets/Search?type=germplasm&search_action=search&pageNum=1&search=Submit+Query&germplasm_type=individual_line&taxon=1&name_type_1=gene_name&method_1=2&name_1=&name_type_2=germplasm_phenotype&method_2=1&name_2=&name_type_3=germplasm_stock_name&method_3=4&name_3="
m1 = paste0("Go to TAIR for First Line: <a href='",url.root,'WILALGH',"' target='_blank'>",input$line,"</a>")
m1 = paste0("Go to TAIR for First Line: <a href='",url.root,'WILALGH',"' target='_blank'>",'WILALGH',"</a>")
M1
m1
m2 = paste0("Go to TAIR for First Line: <a href='",url.root,'xxxx',"' target='_blank'>",'xxxx',"</a>")
m2
cat(m1,m2,sep='/n')
cat(m1,m2,sep=/n)
cat(m1,m2,sep='\n')
m1 = 'x'
m2 = 'x'
m1 + m2
m1 == 'x'
m1 == 'x' & m2 == 'x'
m1 == 'x' & m2 == 'y'
shiny::runApp('~/Desktop/findline')
shiny::runApp('findline')
