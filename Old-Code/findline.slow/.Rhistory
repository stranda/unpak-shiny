install.packages('dplyr')
library(dplyr)
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline")
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
View(phenadjust)
View(phenos)
phenos <- read.csv("phenotypes2015-07-20.csv") #expects 'wide' not long (or melted) format
View(phenos)
library(shiny)
install.packages('shiny')
library(ggplot2)
install.packages(ggplot2)
install.packages('ggplot2')
library(shint)
library(shiny)
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny")
runApp('findline.new/')
install.package('unpakR')
install.packages('unpakR')
install.packages('xtable')
library(RMySQL)
install.packages('RMySQL')
install.packages('reshape')
library(xtable)
runApp('findline.new/')
source(unpakR)
source('unpakR')
library(ggplot2)
runApp('findline.new/')
runApp('pheno2d.new/')
runApp('findline.new/')
install.packages('ggplot2')
install.packages("ggplot2")
runApp('findline.new/')
library(shiny)
runApp('findline.new/')
library(shiny)
runApp('findline.new/')
runApp("tdna")
library(shiny)
runApp('findline.new/')
version()
version
plot(c(1,2,3,4),(1,2,3,4))
plot(c(1,2,3,4),c(1,2,3,4))
qplot(c(1,2,3,4),c(1,2,3,4))
runApp('findline.new/')
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline")
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
View(phenadjust)
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
View(phenadjust)
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/test.findline/example.R')
View(phenos)
runApp('findline.new/')
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny")
runApp('findline.new/')
View(phenos)
library(ggplot2)
library(shiny)
runApp('findline.new/')
?textInput
?selectInput
runApp('findline.new/')
library(shiny)
runApp()
runApp('findline.new/')
con <- dbConnect(MySQL(),dbname="unpak",user="unpak-R",password="thaliana")
lines <- unique(dbGetQuery(con,"SELECT idAccession FROM Accession"))
query <- paste("SELECT O.value, Ph.name, Pl.Accession_idAccession, T.name, E.name, F.name, Pl.idIndividualPlant",
" FROM Observation O",
" JOIN IndividualPlant Pl ON O.IndividualPlant_idIndividualPlant = Pl.idIndividualPlant",
" JOIN Phenotype Ph ON O.Phenotype_idPhenotype = Ph.idPhenotype",
" JOIN Experiment E ON Pl.Experiment_idExperiment = E.idExperiment",
" JOIN Facility F ON F.idFacility = Pl.Facility_idFacility",
" JOIN Treatment T ON O.Treatment_idTreatment = T.idTreatment",
sep="")
obstbl <- dbGetQuery(con,query)
names(obstbl) <- c("value","phenotype","line","treatment","experiment","facility","individualPlant")
line = 'CS70000'
udf <- unique(obstbl[obstbl$line==line,c("experiment","phenotype","treatment")])
obstbl <- merge(obstbl,udf)
View(obstbl)
is.na(obstbl)
which(is.na(obstbl))
which(is.na(obstbl) == 'TRUE')
which(is.na(obstbl) == TRUE)
which(is.na(obstbl) == FALSE)
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
View(df)
df = df[is.na(df)] <- 0
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
df[is.na(df)] = 0
phenos = 'aborted.fruits'
?cbind
col = which(names(df) == input$phenos)
df = cbind(df[1:5],df[5])
col = which(names(df) == phenos)
df = cbind(df[1:5],df[,col])
View(df)
col
names(df)
phenos
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
names(df)
col = which(names(df) == 'aborted.fruits')
col
df = cbind(df[1:5],df[,col])
View(df)
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
df = phytcorrect(df, input$phenos, c("experiment","facility","treatment"), 'line')
df = phytcorrect(df, 'aborted.fruits', c("experiment","facility","treatment"), 'line')
View(df)
which(is.na(df))
which(!is.na(df))
9102*19
runApp('findline.new/')
View(df)
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
View(df)
df = phytcorrect(df, 'aborted.fruits', c("experiment","facility","treatment"), 'line')
View(df)
runApp('findline.new/')
View(df)
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
View(df)
df = obstbl
df = melt(df, id = c('line','experiment','treatment','facility','phenotype','individualPlant'))
df = cast(df, line+experiment+treatment+facility+individualPlant ~ phenotype)
runApp('findline.new/')
col = which(names(df) == phenos)
col
dfx = cbind(df[,1:5],df[,col])
View(dfx)
View(df)
dfx = cbind(df[,1:5],df[,7])
View(dfx)
dfx <- dfx[!is.na(dfx[,pheno]),] #don't mess with NAs
dfx <- dfx[!is.na(dfx),] #don't mess with NAs
View(dfx)
dfx <- dfx[!is.na(dfx[,6]),] #don't mess with NAs
View(dfx)
runApp('findline.new/')
View(dfx)
linedf = df[df$line%in%input$line,]
names(df)[6] = 'value'
names(linedf)[6] = 'value'
linedf = df[df$line%in%input$line,]
linedf = df[which(df$line == input$line),]
linedf = df[which(df$line == line),]
View(linedf)
View(df)
linedf = dfx[which(dfx$line == line),]
View(linedf)
linedf = df[which(df$line == line),]
View(df)
View(dfx)
names(dfx)[6] = 'value'
linedf = df[which(df$line == input$line),]
linedf = df[which(df$line == line),]
View(linedf)
linedf = dfx[which(dfx$line == line),]
View(linedf)
df <- df%>%group_by(line,experiment,treatment)%>%summarise(value=mean(value,na.rm=T))
linedf = df[which(df$line == input$line),]
linedf = df[which(df$line == line),]
View(linedf)
library(shiny)
runApp('pheno2d.new/')
install.packages("png")
install.packages('libong')
install.packages('libpng')
update.packages('libpng')
runApp('pheno2d.new/')
library(shiny)
install.package('shiny')
install.packages('shiny')
install.packages('reshape','RMySQL','dplyr')
install.packages('reshape')
install.packages('dplyr')
library('RMySQL')
install.packages('RMySQL')
install.packages('ggplot2')
library(shiny)
runApp('pheno2d.new/')
runApp('findline/')
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny/Old-Code/test.findline")
source('~/Desktop/Projects/Work_Unpak/unpak-shiny/Old-Code/test.findline/example.R')
adjust <- TRUE
linemeans <- FALSE
phytometers <- FALSE
phenotype <- "fruitnum"
line.identifier <- "Accession"
focal.lines <- c("SALK_075879C","SALK_006272C")
classifiers <- c("experiment","facility","treatment") #columns to take means over. this choice is what we have been doing
phenos <- read.csv("phenotypes2015-07-20.csv")
data <- read.csv("phenotypes2015-07-20.csv") #expects 'wide' not long (or melted) format
View(data)
df = data[which(data$aborted.fruits != NA),]
data$aborted.fruits != NA
data$aborted.fruits == NA
which(data$aborted.fruits != NA)
which(data$aborted.fruits > 0)
which(data$aborted.fruits >= 0)
df = data[which(data$aborted.fruits >= 0),]
View(df)
m = ggplot(data = df, aes(aborted.fruits, fill = treatment)) +
geom_histogram(binwidth = 5) + scale_x_continuous() +
facet_wrap(~ experiment + treatment, scales = 'free', ncol = 1)
m
linedf = which(df$Accession == 'CS70000')
linedf = df[which(df$Accession == 'CS70000'),]
ggplot(data = df, aes(adjval, fill = treatment)) +
geom_histogram(binwidth = input$bins) + scale_x_continuous() +
geom_vline(data = linedf, aes(xintercept=aborted.fruits), color = 'blue', linetype = 'dashed') +
facet_wrap(~ experiment + treatment, scales = 'free', ncol = 1)
ggplot(data = df, aes(adjval, fill = treatment)) +
geom_histogram(binwidth = 5) + scale_x_continuous() +
geom_vline(data = linedf, aes(xintercept=aborted.fruits), color = 'blue', linetype = 'dashed') +
facet_wrap(~ experiment + treatment, scales = 'free', ncol = 1)
ggplot(data = df, aes(aborted.fruits, fill = treatment)) +
geom_histogram(binwidth = 5) + scale_x_continuous() +
geom_vline(data = linedf, aes(xintercept=aborted.fruits), color = 'blue', linetype = 'dashed') +
facet_wrap(~ experiment + treatment, scales = 'free', ncol = 1)
linedf = df[which(df$Accession == 'CS70000' OR 'SALK_CS60000'),]
linedf = df[which(df$Accession == 'CS70000' OR df$Accession == 'SALK_CS60000'),]
linedf = df[which(df$Accession == 'CS70000' | df$Accession == 'SALK_CS60000'),]
View(linedf)
m = ggplot(data = df, aes(aborted.fruits, fill = treatment)) +
geom_histogram(binwidth = 5) + scale_x_continuous() +
geom_vline(data = linedf, aes(xintercept=aborted.fruits), color = 'blue', linetype = 'dashed') +
facet_wrap(~ experiment + treatment, scales = 'free', ncol = 1)
m
View(linedf)
linedf = df[which(df$Accession == 'CS70000' | df$Accession == 'CS22636'),]
m = ggplot(data = df, aes(aborted.fruits, fill = treatment)) +
geom_histogram(binwidth = 5) + scale_x_continuous() +
geom_vline(data = linedf, aes(xintercept=aborted.fruits), color = 'blue', linetype = 'dashed') +
facet_wrap(~ experiment + treatment, scales = 'free', ncol = 1)
m
m = ggplot(data = df, aes(aborted.fruits, fill = treatment)) +
geom_histogram(binwidth = 5) + scale_x_continuous() +
geom_vline(data = linedf, aes(xintercept=aborted.fruits), color = Accession, linetype = 'dashed') +
facet_wrap(~ experiment + treatment, scales = 'free', ncol = 1)
m = ggplot(data = df, aes(aborted.fruits, fill = treatment)) +
geom_histogram(binwidth = 5) + scale_x_continuous() +
geom_vline(data = linedf, aes(xintercept=aborted.fruits), color = linedf$Accession, linetype = 'dashed') +
facet_wrap(~ experiment + treatment, scales = 'free', ncol = 1)
m
m = ggplot(data = df, aes(aborted.fruits, fill = treatment)) +
geom_histogram(binwidth = 5) + scale_x_continuous() +
geom_vline(data = linedf, aes(xintercept=aborted.fruits, color = Accession), linetype = 'dashed') +
facet_wrap(~ experiment + treatment, scales = 'free', ncol = 1)
m
m = ggplot(data = df, aes(aborted.fruits, fill = treatment)) +
geom_histogram(binwidth = 5) + scale_x_continuous() +
geom_vline(data = linedf, aes(xintercept=aborted.fruits, color = Accession), linetype = 'dashed', show_guide = T) +
facet_wrap(~ experiment + treatment, scales = 'free', ncol = 1)
m
linedf = df[which(df$Accession == 'CS70000' | df$Accession == 'CS22636'),]
lines = c('CS70000','CS22636')
lines
which(df$Accession %in% lines)
length(which(df$Accession %in% lines))
runApp('find    ')
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny")
runApp('findline')
lines = c('CS70000', '')
lines
length(which(df$Accession %in% lines))
runApp('findline')
?scale_colour_brewer
runApp('findline')
