lower.bounds=rep(-5, 2),
upper.bounds=rep(10, 2))
r1
r1$par
r1$pareto.optimal
View(nsga2)
nsga2
f <- function(x) { x^2 }
g <- function(x) { sum(x) - 5
f
f <- function(x) { x^2 }
g <- function(x) { sum(x) - 5 }
f
g
res <- nsga2(f, 2, 2, generations=500,
lower.bounds=c(0, 0), upper.bounds=c(10, 10),
constraints=g, cdim=1
)
res
res <- nsga2(f, 2, 2, generations=500,
lower.bounds=c(0, 0), upper.bounds=c(1, 1),
constraints=g, cdim=1
)
res
get.OSC.model
get.OSC.model
get.OSC.model()
?get.OSC.model
??get.OSC.model
source("http://pastebin.com/raw.php?i=JVyTrYRD")
make.OSC.PLS.model
make.OSC.PLS.model()
?make.OSC.PLS.model
??make.OSC.PLS.model
setwd("~/Desktop/Projects/SNVGA_R")
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
all_data = reaad.csv('Data//mumaSubset.csv')
all_data = read.csv('Data//mumaSubset.csv')
all_data = all_data[,-1]
View(all_data)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
populationSize = 8
desiredN = 10
randAmount = .1
niterations = 2
gaoplsda(all_data, populationSize, desiredN, niterations)
gaoplsda(all_data, populationSize, desiredN, niterations, env = parent.frame())
View(Y_Labels)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, niterations, env = parent.frame())
gaoplsda(all_data, populationSize, desiredN, 3, env = parent.frame())
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
labels = all_data[,1]
env$data = as.matrix(all_data[,-1])
# FOR TESTING SUBSET
#   data = data[,1:500]
for (i in 1:ncol(data)) {
data[is.na(data[, i]), i] <- mean(data[, i],  na.rm = TRUE)
}
env$Y_Labels = matrix(rep(0,nrow(all_data)),20)
for (i in 1:length(labels)) {
Y_Labels[i,1] = which(levels(labels) == labels[i]) - 1
}
env$idealN = desiredN
env = parent.frame()
labels = all_data[,1]
env$data = as.matrix(all_data[,-1])
# FOR TESTING SUBSET
#   data = data[,1:500]
for (i in 1:ncol(data)) {
data[is.na(data[, i]), i] <- mean(data[, i],  na.rm = TRUE)
}
env$Y_Labels = matrix(rep(0,nrow(all_data)),20)
for (i in 1:length(labels)) {
Y_Labels[i,1] = which(levels(labels) == labels[i]) - 1
}
env$idealN = desiredN
niterations = niterations
results = rbga.bin(size=ncol(data),
suggestions=NULL,
popSize=populationSize, iters=niterations,
mutationChance=NA,
elitism=NA, zeroToOneRatio=10,
monitorFunc=NULL, evalFunc=oplsda_fitness,
showSettings=FALSE, verbose=FALSE)
View(Y_Labels)
typeof(Y_Labels)
results = rbga.bin(size=ncol(data),
suggestions=NULL,
popSize=populationSize, iters=niterations,
mutationChance=NA,
elitism=NA, zeroToOneRatio=10,
monitorFunc=NULL, evalFunc=oplsda_fitness,
showSettings=FALSE, verbose=FALSE)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = rbga.bin(size=ncol(data),
suggestions=NULL,
popSize=populationSize, iters=niterations,
mutationChance=NA,
elitism=NA, zeroToOneRatio=10,
monitorFunc=NULL, evalFunc=oplsda_fitness,
showSettings=FALSE, verbose=FALSE)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = rbga.bin(size=ncol(data),
suggestions=NULL,
popSize=populationSize, iters=niterations,
mutationChance=NA,
elitism=NA, zeroToOneRatio=10,
monitorFunc=NULL, evalFunc=oplsda_fitness,
showSettings=FALSE, verbose=FALSE)
sum(chr)
chr
results = rbga.bin(size=ncol(data),
suggestions=NULL,
popSize=populationSize, iters=niterations,
mutationChance=NA,
elitism=NA, zeroToOneRatio=10,
monitorFunc=NULL, evalFunc=oplsda_fitness,
showSettings=FALSE, verbose=FALSE)
chr
results = rbga.bin(size=ncol(data),
suggestions=NULL,
popSize=populationSize, iters=niterations,
mutationChance=NA,
elitism=NA, zeroToOneRatio=10,
monitorFunc=NULL, evalFunc=oplsda_fitness,
showSettings=FALSE, verbose=FALSE)
chr
for (i in 1:length(chr)) {
if (rand() < .5)
chr[i] = 1
}
chr
sum(chr)
chromosome = chr
indx = which(chromosome == 1)
x = data[,indx]
opls_results = run_opls(X = x,Y = Y_Labels, num_permutations = 10, CV = -1 ,min_num_OPLS_fact = 0)
fitness = abs(length(indx) - idealN) + opls_results$Q2
fitness
length(indx)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
chr = c(rep(0,ncol(data)))
for (i in 1:ncol(data)) {
if (rand() < randAmount)
chr[i] = 1
}
sum(chr)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
remove(data)
remove(fitness)
remove(x)
remove(Y_Labels)
remove(chr)
remove(chromosome)
remove(i)
remove(indx)
remove(labels)
remove(opls_results)
remove(env)
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
sum(initChr)
for (i in 1:ncol(data)) {
if (rand() < randAmount)
initChr[i] = 1
}
sum(initChr)
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
sum(initChr)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
sum(initChr)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
sum(initChr)
for (i in 1:ncol(data)) {
print(rand())
if (rand() < randAmount) {
initChr[i] = 1
}
sum(initChr)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
View(Y_Labels)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
remove(data)
remove(Y_Labels)
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
View(Y_Labels)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
?createFolds
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
Y
k
length(Y)
filter
k
K
k
m
model
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
Y_pred
z
env$initChr = c(rep(0,ncol(data)))
env = parent.frame()
env$initChr = c(rep(0,ncol(data)))
for (i in 1:ncol(data)) {
if (rand() < randAmount)
env$initChr[i] = 1
}
sum(initChr)
chromosome = initChr
indx = which(chromosome == 1)
x = data[,indx]
opls_results = run_opls(X = x,Y = Y_Labels, num_permutations = 10, CV = -1 ,min_num_OPLS_fact = 0)
indx = which(chromosome == 1)
x = data[,indx]
opls_results = run_opls(X = x,Y = Y_Labels, num_permutations = 10, CV = 1 ,min_num_OPLS_fact = 0)
indx = which(chromosome == 1)
x = data[,indx]
opls_results = run_opls(X = x,Y = Y_Labels, num_permutations = 10, CV = 1 ,min_num_OPLS_fact = 1)
View(Y_Labels)
View(x)
View(data)
for (i in 1:ncol(data)) {
data[is.na(data[, i]), i] <- mean(data[, i],  na.rm = TRUE)
}
View(data)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
remove(data)
remove(x)
remove(Y_Labels)
remove(chromosome)
remove(i)
remove(env)
remove(initChr)
remove(indx)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
View(data)
remove(data)
remove(Y_Labels)
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
remove(initChr)
remove(data)
remove(Y_Labels)
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
View(Y_Labels)
View(data)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
results
sum(results$population[1,])
sum(results$population[2,])
sum(results$population[3,])
sum(results$population[4,])
sum(results$population[5,])
sum(results$population[6,])
sum(results$population[7,])
sum(results$population[8,])
sum(results$population[9,])
install.packages(SPEA2)
install.packages(emu)
install.packages(ec)
install.packages("ec")
install.packages("SPEA2")
install.packages("emu")
install.packages("ec")
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
sum(results$population[1,])
sum(results$population[2,])
sum(results$population[3,])
sum(results$population[4,])
sum(results$population[8,])
sum(results$population[7,])
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
remove(data)
remove(X)
remove(Y)
remove(Y_Labels)
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
remove(X)
remove(Y)
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
results
sum(results$population[2,])
sum(results$population[1,])
sum(results$population[3,])
sum(results$population[4,])
sum(results$population[5,])
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations, env = parent.frame())
sum(results$population[4,])
sum(results$population[1,])
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations = 10, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations = 10, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
all_data = read.csv("Data//mumaAllData.csv")
all_data = all_data[,-1]
View(all_data)
remove(X)
remove(Y)
remove(idealN)
remove(initChr)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations = 10, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
remove(X)
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations = 10, env = parent.frame())
which(results$population[1,] == 1)
colnames(X)[which(results$population[1,] == 1)]
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, populationSize, desiredN, randAmount, niterations = 10, env = parent.frame())
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
install.packages("rgenoud")
R> claw <- function(xx) {
+    x <- xx[1]
+    y <- (0.46 * (dnorm(x, -1, 2/3) + dnorm(x, 1, 2/3)) +
+      (1/300) * (dnorm(x, -0.5, 0.01) + dnorm(x, -1, 0.01) +
+        dnorm(x, -1.5, 0.01)) +
+      (7/300) * (dnorm(x, 0.5, 0.07) + dnorm(x, 1, 0.07) +
+        dnorm(x, 1.5, 0.07)))
+    return(y)
+  }
claw <- function(xx) {
x <- xx[1]
y <- (0.46 * (dnorm(x, -1, 2/3) + dnorm(x, 1, 2/3)) +
+      (1/300) * (dnorm(x, -0.5, 0.01) + dnorm(x, -1, 0.01) +
+        dnorm(x, -1.5, 0.01)) +
+      (7/300) * (dnorm(x, 0.5, 0.07) + dnorm(x, 1, 0.07) +
+        dnorm(x, 1.5, 0.07)))
return(y)
}
claw
claw([1,2])
claw(c(1,2))
library("rgenoud")
claw1 <- genoud(claw, nvars = 1, max = TRUE, pop.size = 3000)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
all_data = read.csv("Data//mumaSubset.csv")
View(all_data)
all_data = all_data[,-1]
ls
View(all_data)
claw
view(claw)
View(claw)
claw
function(xx) {
x <- xx[1]
y <- (0.46 * (dnorm(x, -1, 2/3) + dnorm(x, 1, 2/3)) +
+      (1/300) * (dnorm(x, -0.5, 0.01) + dnorm(x, -1, 0.01) +
+        dnorm(x, -1.5, 0.01)) +
+      (7/300) * (dnorm(x, 0.5, 0.07) + dnorm(x, 1, 0.07) +
+        dnorm(x, 1.5, 0.07)))
return(y)
}
function(xx) {
print(xx)
x <- xx[1]
y <- (0.46 * (dnorm(x, -1, 2/3) + dnorm(x, 1, 2/3)) +
+      (1/300) * (dnorm(x, -0.5, 0.01) + dnorm(x, -1, 0.01) +
+        dnorm(x, -1.5, 0.01)) +
+      (7/300) * (dnorm(x, 0.5, 0.07) + dnorm(x, 1, 0.07) +
+        dnorm(x, 1.5, 0.07)))
return(y)
}
claw1 <- genoud(claw, nvars = 1, max = TRUE, pop.size = 3000)
claw1
claw
claw = function(xx) {
print(xx)
x <- xx[1]
y <- (0.46 * (dnorm(x, -1, 2/3) + dnorm(x, 1, 2/3)) +
+      (1/300) * (dnorm(x, -0.5, 0.01) + dnorm(x, -1, 0.01) +
+        dnorm(x, -1.5, 0.01)) +
+      (7/300) * (dnorm(x, 0.5, 0.07) + dnorm(x, 1, 0.07) +
+        dnorm(x, 1.5, 0.07)))
return(y)
}
claw1 <- genoud(claw, nvars = 1, max = TRUE, pop.size = 3000)
claw1 <- genoud(claw, nvars = 2, max = TRUE, pop.size = 3000)
claw1 <- genoud(claw, nvars = 4, max = TRUE, pop.size = 3000)
results = genoud(oplsda_fitness, nvars = ncol(X), max = FALSE , pop.size = 10)
gaoplsda(all_data, 10, 15, .01, 2)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, 10, 15, .01, 2)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, 10, 15, .01, 2)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, 10, 15, .01, 2)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
gaoplsda(all_data, 10, 15, .01, 2)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, 10, 15, .01, 2)
results
View(X)
which(results$par > .5)
all_data = read.csv("Data//mumaAllData.csv")
all_data = all_data[,-1]
View(all_data)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, 10, 15, .01, 2)
results
which(results$par > .5)
which(results$par > 0)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, 10, 15, .01, 2)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, 10, 15, .01, 2)
2
2+2
2*2
2^100
x = 2
y =5
2+5
x + y
for (i in 1:10) {}
for (i in 1:10) {
print(x*i)
}
View(all_data)
176 * .011
15 / 176
15 / 15
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, 10, 15, .01, 2)
results
15 / 200
which(results$par < 0)
.1 * 15
15 / 20
15 / 18
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
run1 = results$value
run1
results = gaoplsda(all_data, 10, 15, .01, 2)
results
which(results$par < 0)
which(results$par > 0)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, 10, 15, .01, 2)
pop <- read.table('/var/folders/5b/7lykmh8n1xjdbg4jnwmyz9sm0000gp/T//Rtmpi6oJCM/genoud.pro', comment.char = 'G')
best <- pop[pop$V1 == 1,, drop = FALSE]
very.best <- as.matrix(best[nrow(best), 3:ncol(best)])
very.best
xxx = sort(very.best)
xxx
?sort()
xxx = sort(very.best, decreasing = TRUE)
xxx
ndx <- order(very.best, decreasing = T)[1:15]
very.best[ndx]
which(very.best == very.best[ndx])
very.best[ndx]
order(very.best, decreasing=T)
source('~/Desktop/Projects/SNVGA_R/GA_OPLSDA.R')
results = gaoplsda(all_data, 100, 15, .01, 2)
results
order(results$par,decreasing = T)
results$par[order(results$par,decreasing = T)]
results = gaoplsda(all_data, 1000, 15, .01, 2)
pop <- read.table('/var/folders/5b/7lykmh8n1xjdbg4jnwmyz9sm0000gp/T//Rtmpi6oJCM/genoud.pro', comment.char = 'G')
best <- pop[pop$V1 == 1,, drop = FALSE]
very.best <- as.matrix(best[nrow(best), 4:ncol(best)])
very.best
best
%>%
?%>%
?%
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny")
library(shiny)
run.
runApp('pheno2d.new/')
install.packages('RMySQL')
runApp('pheno2d.new/')
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny")
runApp('pheno2d.new/')
remove.packages('RMySQL')
runApp('pheno2d.new/')
setwd("~/Desktop/Projects/Work_Unpak/unpak-shiny")
runApp('pheno2d.new/')
